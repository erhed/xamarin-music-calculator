using System.Collections.Generic;using System.Threading.Tasks;using SQLite;using MusicCalculator.Models;namespace MusicCalculator{    public class SongDatabase    {        readonly SQLiteAsyncConnection _database;        public SongDatabase(string dbPath)        {            _database = new SQLiteAsyncConnection(dbPath);            _database.CreateTableAsync<Song>().Wait();        }        public Task<List<Song>> GetNotesAsync()        {            return _database.Table<Song>().ToListAsync();        }        public Task<Song> GetNoteAsync(int id)        {            return _database.Table<Song>()                            .Where(i => i.ID == id)                            .FirstOrDefaultAsync();        }        public Task<int> SaveNoteAsync(Song song)        {            if (song.ID != 0)            {                return _database.UpdateAsync(song);            }            else            {                return _database.InsertAsync(song);            }        }        public Task<int> DeleteNoteAsync(Song song)        {            return _database.DeleteAsync(song);        }    }}